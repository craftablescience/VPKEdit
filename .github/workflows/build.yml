name: Build
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    # nothing here

env:
  BUILD_DIR: ${{github.workspace}}/build
  QT_VERSION: '6.5.2'
  QT_MODULES: 'qtimageformats'

jobs:
  build-msvc:
    strategy:
      matrix:
        build_type: [Debug, Release]
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
          spectre: true

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: ${{env.QT_VERSION}}
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          dir: ${{github.workspace}}/qt
          modules: ${{env.QT_MODULES}}
          cache: true

      - name: Configure CMake
        run: cmake -G "Ninja" -B "${{env.BUILD_DIR}}" -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DQT_BASEDIR="${{github.workspace}}/qt/Qt/${{env.QT_VERSION}}/msvc2019_64"

      - name: Build
        working-directory: ${{env.BUILD_DIR}}
        run: cmake --build . --config ${{matrix.build_type}} -t vpkedit -- -j%NUMBER_OF_PROCESSORS%

      - name: Upload Standalone
        uses: actions/upload-artifact@v3
        with:
          name: VPKEdit-Windows-Standalone-msvc-${{matrix.build_type}}
          path: |
            ${{env.BUILD_DIR}}/CREDITS.md
            ${{env.BUILD_DIR}}/LICENSE
            ${{env.BUILD_DIR}}/vpkedit.exe
            ${{env.BUILD_DIR}}/*.dll
            ${{env.BUILD_DIR}}/imageformats/*.dll
            ${{env.BUILD_DIR}}/platforms/*.dll
            ${{env.BUILD_DIR}}/styles/*.dll
            ${{env.BUILD_DIR}}/tls/*.dll
          retention-days: 7

      - name: Create Installer
        working-directory: ${{env.BUILD_DIR}}
        run: cpack

      - name: Upload Installer
        uses: actions/upload-artifact@v3
        with:
          name: VPKEdit-Windows-Installer-msvc-${{matrix.build_type}}
          path: |
            ${{env.BUILD_DIR}}/VPKEdit-*-win64.exe
          retention-days: 7


  build-linux:
    strategy:
      matrix:
        build_type: [Debug, Release]
        compiler: [gcc, clang]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Necessary Packages
        run: sudo apt update && sudo apt install -y cmake build-essential ninja-build chrpath

      - name: Install GCC
        if: ${{ matrix.compiler == 'gcc' }}
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 11
          platform: x64

      - name: Install Clang
        if: ${{ matrix.compiler == 'clang' }}
        uses: egor-tensin/setup-clang@v1
        with:
          version: 15
          platform: x64
      
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: ${{env.QT_VERSION}}
          host: 'linux'
          target: 'desktop'
          arch: 'gcc_64'
          dir: ${{github.workspace}}/qt
          modules: ${{env.QT_MODULES}}
          cache: true

      - name: Configure CMake
        run: cmake -G "Ninja" -B "${{env.BUILD_DIR}}" -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DQT_BASEDIR="${{github.workspace}}/qt/Qt/${{env.QT_VERSION}}/gcc_64"

      - name: Build
        working-directory: ${{env.BUILD_DIR}}
        run: cmake --build . --config ${{matrix.build_type}} -t vpkedit -- -j$(nproc)

      - name: Fixup Binaries
        run: |
          chmod +x '${{env.BUILD_DIR}}/vpkedit'

          # runpath cleanup for the Qt binaries. These are (mostly) wrong, leading to crashes
          for f in ${{env.BUILD_DIR}}/*.so*; do
            echo "Fixing $f..."
            chrpath -r '$ORIGIN' "$f"
          done
          for f in ${{env.BUILD_DIR}}/*/*.so*; do
            echo "Fixing $f..."
            chrpath -r '$ORIGIN/..' "$f"
          done

      - name: Upload Standalone
        uses: actions/upload-artifact@v3
        with:
          name: VPKEdit-Linux-Standalone-${{matrix.compiler}}-${{matrix.build_type}}
          path: |
            ${{env.BUILD_DIR}}/CREDITS.md
            ${{env.BUILD_DIR}}/LICENSE
            ${{env.BUILD_DIR}}/vpkedit
            ${{env.BUILD_DIR}}/*.so*
            ${{env.BUILD_DIR}}/egldeviceintegrations/*.so*
            ${{env.BUILD_DIR}}/imageformats/*.so*
            ${{env.BUILD_DIR}}/platforminputcontexts/*.so*
            ${{env.BUILD_DIR}}/platforms/*.so*
            ${{env.BUILD_DIR}}/platformthemes/*.so*
            ${{env.BUILD_DIR}}/tls/*.so*
            ${{env.BUILD_DIR}}/wayland-decoration-client/*.so*
            ${{env.BUILD_DIR}}/wayland-graphics-integration-client/*.so*
            ${{env.BUILD_DIR}}/wayland-shell-integration/*.so*
            ${{env.BUILD_DIR}}/xcbglintegrations/*.so*
          retention-days: 7

      - name: Create Installer
        working-directory: ${{env.BUILD_DIR}}
        run: cpack

      - name: Upload Installer
        uses: actions/upload-artifact@v3
        with:
          name: VPKEdit-Linux-Installer-${{matrix.compiler}}-${{matrix.build_type}}
          path: |
            ${{env.BUILD_DIR}}/VPKEdit-*-Linux.deb
          retention-days: 7
